#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_Prop_BurstReaction

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Athena_Prop_BurstReaction.Athena_Prop_BurstReaction_C
// 0x0040 (0x0BE0 - 0x0BA0)
class AAthena_Prop_BurstReaction_C : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        ParticleTransformSource;                           // 0x0BA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        EmitterOnDamage;                                   // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            MeshToReplaceOnDamage;                             // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnParticlesFromHitLocation;                     // 0x0BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OnlyOnce;                                          // 0x0BC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59EA[0x2];                                     // 0x0BC2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Emitter_Scale_X;                                   // 0x0BC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Emitter_Scale_Y;                                   // 0x0BC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Emitter_Scale_Z;                                   // 0x0BCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar_0;                                          // 0x0BD0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Athena_Prop_BurstReaction(int32 EntryPoint);
	void FireEffect(const struct FVector& HitLocation);
	void OnDamagedCustom(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Athena_Prop_BurstReaction_C">();
	}
	static class AAthena_Prop_BurstReaction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthena_Prop_BurstReaction_C>();
	}
};
static_assert(alignof(AAthena_Prop_BurstReaction_C) == 0x000008, "Wrong alignment on AAthena_Prop_BurstReaction_C");
static_assert(sizeof(AAthena_Prop_BurstReaction_C) == 0x000BE0, "Wrong size on AAthena_Prop_BurstReaction_C");
static_assert(offsetof(AAthena_Prop_BurstReaction_C, UberGraphFrame) == 0x000BA0, "Member 'AAthena_Prop_BurstReaction_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_BurstReaction_C, ParticleTransformSource) == 0x000BA8, "Member 'AAthena_Prop_BurstReaction_C::ParticleTransformSource' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_BurstReaction_C, EmitterOnDamage) == 0x000BB0, "Member 'AAthena_Prop_BurstReaction_C::EmitterOnDamage' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_BurstReaction_C, MeshToReplaceOnDamage) == 0x000BB8, "Member 'AAthena_Prop_BurstReaction_C::MeshToReplaceOnDamage' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_BurstReaction_C, SpawnParticlesFromHitLocation) == 0x000BC0, "Member 'AAthena_Prop_BurstReaction_C::SpawnParticlesFromHitLocation' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_BurstReaction_C, OnlyOnce) == 0x000BC1, "Member 'AAthena_Prop_BurstReaction_C::OnlyOnce' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_BurstReaction_C, Emitter_Scale_X) == 0x000BC4, "Member 'AAthena_Prop_BurstReaction_C::Emitter_Scale_X' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_BurstReaction_C, Emitter_Scale_Y) == 0x000BC8, "Member 'AAthena_Prop_BurstReaction_C::Emitter_Scale_Y' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_BurstReaction_C, Emitter_Scale_Z) == 0x000BCC, "Member 'AAthena_Prop_BurstReaction_C::Emitter_Scale_Z' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_BurstReaction_C, NewVar_0) == 0x000BD0, "Member 'AAthena_Prop_BurstReaction_C::NewVar_0' has a wrong offset!");

}

